<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function divergente_install() {
  // Enable some standard blocks.
  $default_theme = 'basic';
  theme_enable($default_theme);
  variable_set('theme_default', $default_theme);

  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'management',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 1,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Allow visitor account creation, but with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));
}

/**
 * Implements hook_kw_manifests_info().
 */
function divergente_kw_manifests_info() {
  $manifests = array();

  $manifests['themes'] = array(
    'callback' => 'divergente_manifest_theme',
  );

  $manifests['time_and_location'] = array(
    'callback' => 'divergente_manifest_time_and_location',
  );

  $manifests['configuration'] = array(
    'callback' => 'divergente_manifest_import_configurations',
  );

  return $manifests;
}

/**
 * Setup default themes.
 */
function divergente_manifest_theme() {
  variable_set('theme_default', DIVERGENTE_THEME_DEFAULT);
  variable_set('admin_theme', DIVERGENTE_THEME_ADMINISTRATIVE);

  $theme_to_enable = array(DIVERGENTE_THEME_ADMINISTRATIVE, DIVERGENTE_THEME_DEFAULT);
  $themes_info = list_themes(true);

  foreach ($theme_to_enable as $theme) {
    if (empty($themes_info[$theme]->status)) {
      theme_enable(array($theme));
    }
  }
}

/**
 * Setup time and location.
 */
function divergente_manifest_time_and_location() {
  variable_set('site_default_country', 'BR');
  variable_set('date_default_timezone', 'America/Sao_Paulo');
  variable_set('configurable_timezones', 0);
}

/**
 * Sync configuration.
 */
function divergente_manifest_import_configurations() {
  variable_set('configuration_config_path', 'profiles/divergente/cnf/config');
  module_load_include('inc', 'configuration');
  _configuration_left_sync();
}
